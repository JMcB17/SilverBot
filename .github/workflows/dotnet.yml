name: .NET

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: windows-2019
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
    - uses: actions/checkout@v2
    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force -Verbose
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Build
      run: dotnet build --configuration Release
    - name: Zip
      shell: powershell
      run: Compress-7Zip "SilverBotDS\bin\Release\net5.0" -ArchiveFileName "silverbot.zip" -Format Zip
    - name: Make a random name
      id: E
      shell: powershell
      run: |
          $e =Get-Random
          echo "::set-output name=Random::$e"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         tag_name: ${{ steps.E.outputs.Random }}
         release_name: ${{ steps.E.outputs.Random }}
         body: Automated release, a release will be created for every single push on the master branch. this one is for ${{ github.sha }}
         draft: true
         prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: ./silverbot.zip
         asset_name: silverbot.zip
         asset_content_type: application/zip
    - name: Upload Release Dll
      id: upload-release-dll
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: .\SilverBotDS\bin\Release\net5.0\SilverBotDS.dll
         asset_name: SilverBotDS.dll
         asset_content_type: application/octet-stream
    - name: Upload View Dll
      id: upload-view-dll
      uses: actions/upload-release-asset@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: .\SilverBotDS\bin\Release\net5.0\SilverBotDS.Views.dll
         asset_name: SilverBotDS.Views.dll
         asset_content_type: application/octet-stream
    - name: Download translations
      with:
        download_translations: true
        skip_untranslated_strings: true
        skip_untranslated_files: true
        push_translations: true
        commit_message: 'New Crowdin translations by Github Action'
        create_pull_request: true
        pull_request_title: 'New Crowdin translations'
        pull_request_body: 'New Crowdin pull request with translations'
        pull_request_labels: 'enhancement, good first issue'
        project_id: ${{ secrets.CROWDIN_PROJECT_ID }}
        token: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
        translation: '/Languages'
        base_url: 'https://crowdin.com'
        base_path: '/SilverBotDS'